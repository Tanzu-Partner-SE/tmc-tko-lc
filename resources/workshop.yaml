apiVersion: learningcenter.tanzu.vmware.com/v1beta1
kind: Workshop
metadata:
  name: tko-day1
  annotations:
    kapp.k14s.io/update-strategy: always-replace
spec:
  title: Partner Demo Workshop - Module 2
  description: Workshop created to demo the TKO Day 1 operations.
  vendor: eduk8s.io
  difficulty: beginner
  duration: 15m
  url: https://github.com/Tanzu-Partner-SE/tmc-tko-lc
  content:
    files: github.com/Tanzu-Partner-SE/tmc-tko-lc?ref=main
    image: harbor.mytanzusandbox.com/learningcenter/tko-day1:0.0.5
  environment:
    objects:
      - apiVersion: policy/v1beta1
        kind: PodSecurityPolicy
        metadata:
          name: aa-$(workshop_namespace)-security-policy
        spec:
          privileged: true
          allowPrivilegeEscalation: true
          # requiredDropCapabilities:
          # - KILL
          # - MKNOD
          hostIPC: true
          hostNetwork: true
          hostPID: true
          hostPorts: []
          runAsUser:
            rule: MustRunAsNonRoot
          seLinux:
            rule: RunAsAny
          fsGroup:
            rule: RunAsAny
          supplementalGroups:
            rule: RunAsAny
          volumes:
            - configMap
            - downwardAPI
            - emptyDir
            - persistentVolumeClaim
            - projected
            - secret
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: $(workshop_namespace)-security-policy
        rules:
          - apiGroups:
              - policy
            resources:
              - podsecuritypolicies
            verbs:
              - use
            resourceNames:
              - aa-$(workshop_namespace)-security-policy
  session:
    env:
      - name: VMWARE_CLOUD_ORG_NAME
        value: "Partner - Tanzu SE Americas"
      - name: TMC_URL
        value: "https://partnertanzuseamericas.tmc.cloud.vmware.com/"
      - name: DP_LOCATION
        value: "aws-s3-store"
    resources:
      storage: 5Gi
      memory: 2Gi
    namespaces:
      #budget: small
      budget: custom
    applications:
      terminal:
        enabled: true
        layout: split
      console:
        enabled: true
        vendor: octant
      editor:
        enabled: true
      docker:
        enabled: true
        memory: 3Gi
        storage: 20Gi
    objects:
      - apiVersion: v1
        kind: LimitRange
        metadata:
          name: resource-limits
        spec:
          limits:
            - max:
                cpu: "4"
                memory: 10Gi
              min:
                cpu: 5m
                memory: 32Mi
              type: Pod
            - default:
                cpu: "2"
                memory: 4Gi
              defaultRequest:
                cpu: 50m
                memory: 128Mi
              max:
                cpu: "4"
                memory: 10Gi
              min:
                cpu: 5m
                memory: 32Mi
              type: Container
            - max:
                storage: 10Gi
              min:
                storage: 1Gi
              type: PersistentVolumeClaim
      - apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          namespace: $(workshop_namespace)
          name: $(session_namespace)-security-policy
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: $(workshop_namespace)-security-policy
        subjects:
          - kind: Group
            namespace: $(workshop_namespace)
            name: system:serviceaccounts:$(workshop_namespace)
      - apiVersion: v1
        kind: Service
        metadata:
          labels:
            learningcenter.tanzu.vmware.com/session.name: $(session_namespace)
            app.name: wp
          name: $(session_namespace)-petclinic
          namespace: $(workshop_namespace)
        spec:
          ports:
            - name: 30080-tcp
              port: 30080
              protocol: TCP
              targetPort: 30080
          selector:
            deployment: $(session_namespace)
          type: ClusterIP

      - apiVersion: projectcontour.io/v1
        kind: HTTPProxy
        metadata:
          name: $(session_namespace)-petclinic
          namespace: $(workshop_namespace)
        spec:
          virtualhost:
            fqdn: $(session_namespace)-petclinic.$(ingress_domain)
            # tls:
            #   secretName: wildcard-lc-tls
          routes:
            - conditions:
                - prefix: /
              services:
                - name: $(session_namespace)-petclinic
                  port: 30080
